modules = ["web", "nodejs-20", "python-3.11", "postgresql-16"]
run = "python app.py"

[nix]
channel = "stable-24_05"
packages = ["cacert", "cargo", "freetype", "geckodriver", "glibcLocales", "lcms2", "libGL", "libGLU", "libffi", "libiconv", "libimagequant", "libjpeg", "libtiff", "libwebp", "libxcrypt", "openjpeg", "openssl", "pkg-config", "rustc", "tcl", "tk", "unixODBC", "zlib"]

[deployment]
run = ["sh", "-c", "python app.py"]

[workflows]
runButton = "Project"

[[workflows.workflow]]
name = "Run Flask App"
author = 34253612
mode = "sequential"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "python app.py"

[[workflows.workflow]]
name = "Project"
mode = "parallel"
author = "agent"

[[workflows.workflow.tasks]]
task = "workflow.run"
args = "Flask-Scraper"

[[workflows.workflow]]
name = "Flask-Scraper"
author = "agent"

[workflows.workflow.metadata]
outputType = "webview"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "python app.py"
waitForPort = 5000

[[ports]]
localPort = 5000
externalPort = 80

[[ports]]
localPort = 8080
externalPort = 8080

[agent]
expertMode = true
integrations = ["python_openai:1.0.0"]
